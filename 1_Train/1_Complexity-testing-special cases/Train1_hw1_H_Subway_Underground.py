""" Описание задачи:
На некоторых кросс-платформенных станциях метро (как, например, «Третьяковская»)
на разные стороны платформы приходят поезда разных направлений.
Таня договорилась встретиться с подругой на такой станции, но поскольку подруга
приехала из другого часового пояса, то из-за джетлага сильно проспала, и Тане
пришлось долго её ждать.
1) Поезда всегда ходят точно по расписанию, и Таня знает,
что поезд стоит на платформе ровно одну минуту, а интервал между поездами
(время, в течение которого поезда у платформы нет) составляет a минут для поездов
на первом пути и b минут для поездов на втором пути.
2) То есть на первый путь приезжает поезд и стоит одну минуту, затем в течение a минут
поезда у платформы нет, затем в течение одной минуты у платформы стоит следующий поезд и т. д.
3) Пока Таня стояла на платформе, она насчитала n поездов на первом пути и m поездов на втором пути.
Определите минимальное и максимальное время, которое Таня могла провести на платформе,
или сообщите, что она точно сбилась со счёта.
4) Все поезда, которые видела Таня, она наблюдала в течение всей минуты, то есть Таня
не приходит и не уходит с платформы посередине той минуты, когда поезд стоит на платформе.

Формат ввода: Первая строка входных данных содержит число a — интервал между поездами на первом пути.
Вторая строка содержит число b — интервал между поездами на втором пути.
Третья строка содержит число n — количество поездов на первом пути, которые увидела Таня.
Четвёртая строка содержит число m — количество поездов на втором пути, которые увидела Таня.
Все числа — целые, от 1 до 1000.

Формат вывода: Программа должна вывести два числа: минимальное и максимальное
время в минутах, которое Таня могла стоять на платформе, или одно число -1,
если Таня точно ошиблась.
"""


def subway(a: int, b: int, n: int, m: int) -> str:
    """
    Функция details определяет минимальное и максимальное время в минутах, которое
    Таня могла стоять на платформе, или одно число -1, если Таня точно ошиблась.

    Example :
     :>>> subway(1, 3, 3, 2) -> 5 7

     В первом примере по первому пути поезда ходят через 1 минуту. По второму — через 3.
     Стоя на платформе 5, 6 или 7 минут, Таня могла насчитать 3 поезда на первом пути и 2 на втором.

     :>>> subway(1, 5, 1, 2) -> -1

    :param a: мин, интервал между поездами для поездов на первом пути
    :param b: мин, интервал между поездами для поездов на втором пути
    :param n: количество поездов на первом пути, которые увидела Таня
    :param m: количество поездов на втором пути, которые увидела Таня
    :return: мин и макс, минимальное и максимальное время в минутах
    """
    way1_min = n + a * (n - 1)
    way1_max = n + a * (n + 1)
    way2_min = m + b * (m - 1)
    way2_max = m + b * (m + 1)
    if way1_max < way2_min or way2_max < way1_min:
        return '-1'
    else:
        if way1_min == way2_min:
            expectation_min = way2_min
        else:
            expectation_min = max(way1_min, way2_min)
        if way1_max == way2_max:
            expectation_max = way2_max
        else:
            expectation_max = min(way1_max, way2_max)

        return str(expectation_min) + ' ' + str(expectation_max)


a_input = int(input())
b_input = int(input())
n_input = int(input())
m_input = int(input())
print(subway(a_input, b_input, n_input, m_input))
