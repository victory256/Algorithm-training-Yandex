""" Описание задачи:
В деревне Интернетовка все дома расположены вдоль одной улицы по одну сторону от нее.
По другую сторону от этой улицы пока ничего нет, но скоро все будет – школы, магазины,
кинотеатры и т.д.
Для начала в этой деревне решили построить школу. Место для строительства школы решили
выбрать так, чтобы суммарное расстояние, которое проезжают ученики от своих домов до школы,
было минимально.
План деревни можно представить в виде прямой, в некоторых целочисленных точках которой
находятся дома учеников. Школу также разрешается строить только в целочисленной точке этой
прямой (в том числе разрешается строить школу в точке, где расположен один из домов –
ведь школа будет расположена с другой стороны улицы).
Напишите программу, которая по известным координатам домов учеников поможет определить
координаты места строительства школы.

Формат ввода:
Сначала вводится число N — количество учеников (0 < N < 100001). Далее идут в строго
возрастающем порядке координаты домов учеников — целые числа, не превосходящие 2 × 109 по модулю.

Формат вывода:
Выведите одно целое число — координату точки, в которой лучше всего построить школу.
Если ответов несколько, выведите любой из них.
"""


def rho(school_rho: int, house_rho: list) -> int:
    """
    Вспомогательная функция rho, сичтает расстояние между школой и всеми домами
    :param school_rho: номер школы в list
    :param house_rho:  список всех домов
    :return: расстояние
    """
    return sum([abs(i - school_rho) for i in house_rho])


def building_school(house: list) -> int:
    """
    Функция building_school вычисляет координату школы (в линии), при условии минимального
    расстояния до каждого из домов в списке house.

    Example :
     :>>> building_school([1, 2, 3, 4]) -> 3

     :>>> building_school([-1, 0, 1]) -> 0

    :param house: список домов, длина списка < 10^5+1, значения в списке < 2*10^9 по модулю
    :return: оптимальное расположение школы
    """
    a, b = min(house), max(house)
    school_0 = int((a + b) / 2)
    school = a - 10
    while abs(school_0 - school) > 1:
        school = int((a + b) / 2)
        if rho(school - 1, house) < rho(school, house):
            b = school
        else:
            a = school
        school_0 = school
        school = (a + b) // 2
    # print("----",school_0,school,abs(school_0-school)>1)
    if rho(school_0, house) < rho(school, house):
        return school_0
    else:
        return school


n_input = int(input())
house_input = list(map(int, input().split()))
print(building_school(house_input))
