""" Описание задачи:
На столе лежали две одинаковые верёвочки целой положительной длины.

Петя разрезал одну из верёвочек на N частей, каждая из которых имеет целую положительную длину,
так что на столе стало N+1 верёвочек. Затем в комнату зашла Маша и взяла одну из лежащих
на столе верёвочек. По длинам оставшихся на столе N верёвочек определите, какую
НАИМЕНЬШУЮ длину может иметь верёвочка, взятая Машей.

Формат ввода:
Первая строка входных данных содержит одно целое число N — количество верёвочек,
оставшихся на столе (2 ≤ N ≤ 1000). Во второй строке содержится N целых чисел li — длины
верёвочек (1 ≤ li ≤ 1000).

Формат вывода:
Выведите одно целое число — наименьшую длину, которую может иметь верёвочка, взятая Машей.
"""


def rope(n_rope: int, len_rope: list) -> int:
    """
    Функция rope выводит наименьшую длину, которую может иметь верёвочка, взятая Машей

    Example :
     :>>> rope(4, [1, 5, 2, 1]) -> 1

     :>>> rope(4, [5, 12, 4, 3]) -> 24

    :param n_rope: 2 ≤ N ≤ 1000, количество верёвочек
    :param len_rope: 1 ≤ li ≤ 1000, массив длин верёвочек
    :return: наименьшая длина, которую может иметь верёвочка
    """
    # for i in range(8):
    #    print(chess_board[i])
    max_rope = max(len_rope)
    sum_rope = sum(len_rope) - max_rope
    anser = max_rope - sum_rope
    if anser > 0:
        return anser
    else:
        return sum_rope + max_rope


n_rope_input = int(input())
len_rope_input = list(map(int, input().split()))
print(rope(n_rope_input, len_rope_input))
